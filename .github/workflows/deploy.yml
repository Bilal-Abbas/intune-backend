name: Build and Deploy to EB

on:
  push:
    branches: [main]
    # Remove the paths filter to trigger on all changes
    # paths: ['backend/**', '.github/workflows/**']

env:
  AWS_REGION: ${{ secrets.AWS_REGION }} #us-east-1
  AWS_SES_REGION: ${{ secrets.AWS_SES_REGION || 'us-east-1' }}
  # ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }} #intbio-backend
  EB_ENVIRONMENT: ${{ secrets.EB_ENVIRONMENT }} #production  # Change this to your EB environment name
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          aws-ses-region: ${{ secrets.AWS_SES_REGION || 'us-east-1' }}

      - name: Debug AWS credentials
        run: |
          echo "AWS_REGION: $AWS_REGION"
          echo "AWS_SES_REGION: $AWS_SES_REGION"
          echo "AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:0:10}..."
          echo "AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:0:10}..."
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push image to Amazon ECR
      #   id: build-image
      #   env:
      #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     cd backend
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
      #     docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
      #     docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
      #     echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Install EB CLI
        run: pip install awsebcli

      - name: Deploy to Elastic Beanstalk
        env:
          EB_ENVIRONMENT: ${{ secrets.EB_ENVIRONMENT }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          APPLICATION_NAME: ${{ secrets.APPLICATION_NAME }}
          EC2_KEYNAME: ${{ secrets.EC2_KEYNAME }}
          PLATFORM: ${{ secrets.PLATFORM }}
          WORKSPACE_TYPE: ${{ secrets.WORKSPACE_TYPE }}
          AWS_SES_REGION: ${{ secrets.AWS_SES_REGION || 'us-east-1' }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          # Create .elasticbeanstalk/config.yml for non-interactive deployment
          mkdir -p .elasticbeanstalk
          cat > .elasticbeanstalk/config.yml << EOF
          branch-defaults:
            main:
              environment: $EB_ENVIRONMENT
          environment-defaults:
            backend:
              branch: null
              repository: null
          global:
            application_name: $APPLICATION_NAME
            branch: null
            default_ec2_keyname: $EC2_KEYNAME
            default_platform: $PLATFORM
            default_region: $AWS_REGION
            include_git_submodules: true
            instance_profile: null
            platform_name: null
            platform_version: null
            profile: null
            repository: null
            sc: git
            workspace_type: $WORKSPACE_TYPE
          EOF
          
          echo "EB configuration created"
          cat .elasticbeanstalk/config.yml
          
          echo "Deploying to EB..."
          eb deploy $EB_ENVIRONMENT 